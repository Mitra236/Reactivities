[{"E:\\Udemy\\Reactivities\\client-app\\src\\index.tsx":"1","E:\\Udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","E:\\Udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","E:\\Udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"4","E:\\Udemy\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx":"5","E:\\Udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"6","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"7","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"8","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"9","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"10","E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\store.ts":"11","E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"12","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\home\\HomePage.tsx":"13","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"14","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"15","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\AcitivityDeatiledInfo.tsx":"16","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"17","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSideBar.tsx":"18","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx":"19","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\errors\\TestErrors.tsx":"20","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\errors\\NotFound.tsx":"21","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\errors\\ValidationErrors.tsx":"22","E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts":"23","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\errors\\ServerError.tsx":"24","E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextInput.tsx":"25","E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextArea.tsx":"26","E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\MySelectInput.tsx":"27","E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\options\\CategoryOptions.tsx":"28","E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\MyDateInput.tsx":"29","E:\\Udemy\\Reactivities\\client-app\\src\\features\\users\\LoginForm.tsx":"30","E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts":"31","E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts":"32","E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"33","E:\\Udemy\\Reactivities\\client-app\\src\\features\\users\\RegisterForm.tsx":"34","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendee.tsx":"35","E:\\Udemy\\Reactivities\\client-app\\src\\app\\models\\profile.ts":"36","E:\\Udemy\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"37","E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileCard.tsx":"38","E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePage.tsx":"39","E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileHeader.tsx":"40","E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileContent.tsx":"41","E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\profileStore.ts":"42","E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePhotos.tsx":"43","E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\imageUpload\\PhotoUploadWidget.tsx":"44","E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetDropzone.tsx":"45","E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetCropper.tsx":"46","E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\commentStore.ts":"47","E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\FollowButton.tsx":"48","E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileFollowings.tsx":"49","E:\\Udemy\\Reactivities\\client-app\\src\\app\\models\\pagination.ts":"50","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemPlaceholder.tsx":"51"},{"size":1006,"mtime":1647112646937,"results":"52","hashOfConfig":"53"},{"size":440,"mtime":1638702366330,"results":"54","hashOfConfig":"53"},{"size":2631,"mtime":1649330957335,"results":"55","hashOfConfig":"53"},{"size":4340,"mtime":1650372110892,"results":"56","hashOfConfig":"53"},{"size":1549,"mtime":1649324253052,"results":"57","hashOfConfig":"53"},{"size":384,"mtime":1638702366306,"results":"58","hashOfConfig":"53"},{"size":2167,"mtime":1650378924256,"results":"59","hashOfConfig":"53"},{"size":862,"mtime":1639162440632,"results":"60","hashOfConfig":"53"},{"size":1465,"mtime":1650273582294,"results":"61","hashOfConfig":"53"},{"size":4146,"mtime":1648307107740,"results":"62","hashOfConfig":"53"},{"size":901,"mtime":1649614663974,"results":"63","hashOfConfig":"53"},{"size":9208,"mtime":1650378224135,"results":"64","hashOfConfig":"53"},{"size":1641,"mtime":1647294638264,"results":"65","hashOfConfig":"53"},{"size":2898,"mtime":1649324311012,"results":"66","hashOfConfig":"53"},{"size":3555,"mtime":1648307865001,"results":"67","hashOfConfig":"53"},{"size":1725,"mtime":1647113737888,"results":"68","hashOfConfig":"53"},{"size":4252,"mtime":1650219035668,"results":"69","hashOfConfig":"53"},{"size":2181,"mtime":1650284585245,"results":"70","hashOfConfig":"53"},{"size":1378,"mtime":1650378540362,"results":"71","hashOfConfig":"53"},{"size":2029,"mtime":1643477796889,"results":"72","hashOfConfig":"53"},{"size":613,"mtime":1643476702381,"results":"73","hashOfConfig":"53"},{"size":503,"mtime":1647294867201,"results":"74","hashOfConfig":"53"},{"size":878,"mtime":1647293085518,"results":"75","hashOfConfig":"53"},{"size":770,"mtime":1643478835723,"results":"76","hashOfConfig":"53"},{"size":718,"mtime":1647290518137,"results":"77","hashOfConfig":"53"},{"size":722,"mtime":1647110998058,"results":"78","hashOfConfig":"53"},{"size":1005,"mtime":1647111565684,"results":"79","hashOfConfig":"53"},{"size":266,"mtime":1647111413824,"results":"80","hashOfConfig":"53"},{"size":852,"mtime":1647112753387,"results":"81","hashOfConfig":"53"},{"size":1534,"mtime":1647294214048,"results":"82","hashOfConfig":"53"},{"size":1722,"mtime":1649344658195,"results":"83","hashOfConfig":"53"},{"size":515,"mtime":1647293753465,"results":"84","hashOfConfig":"53"},{"size":491,"mtime":1647293924829,"results":"85","hashOfConfig":"53"},{"size":2180,"mtime":1647294883691,"results":"86","hashOfConfig":"53"},{"size":1445,"mtime":1650290095912,"results":"87","hashOfConfig":"53"},{"size":552,"mtime":1650284124013,"results":"88","hashOfConfig":"53"},{"size":1117,"mtime":1648306747671,"results":"89","hashOfConfig":"53"},{"size":942,"mtime":1650290044387,"results":"90","hashOfConfig":"53"},{"size":1188,"mtime":1650291663703,"results":"91","hashOfConfig":"53"},{"size":1430,"mtime":1650290024235,"results":"92","hashOfConfig":"53"},{"size":1140,"mtime":1650291551573,"results":"93","hashOfConfig":"53"},{"size":5470,"mtime":1650292156335,"results":"94","hashOfConfig":"53"},{"size":3955,"mtime":1649346017094,"results":"95","hashOfConfig":"53"},{"size":2119,"mtime":1649344951376,"results":"96","hashOfConfig":"53"},{"size":1114,"mtime":1649342755402,"results":"97","hashOfConfig":"53"},{"size":708,"mtime":1649343626883,"results":"98","hashOfConfig":"53"},{"size":2262,"mtime":1650267283198,"results":"99","hashOfConfig":"53"},{"size":1450,"mtime":1650290003069,"results":"100","hashOfConfig":"53"},{"size":1170,"mtime":1650291779171,"results":"101","hashOfConfig":"53"},{"size":543,"mtime":1650372329474,"results":"102","hashOfConfig":"53"},{"size":1406,"mtime":1650378805466,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"wbe28r",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Udemy\\Reactivities\\client-app\\src\\index.tsx",[],["212","213"],"E:\\Udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["214"],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\store.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\home\\HomePage.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\AcitivityDeatiledInfo.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",["215","216"],"import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Segment, Header, Comment, Button, Loader} from 'semantic-ui-react'\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport * as Yup from 'yup';\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\r\n    const { commentStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId]);\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={comment.image || '/assets/user.png'}/>\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text style={{whitesSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n\r\n                    <Formik\r\n                        onSubmit={(values, { resetForm }) =>\r\n                        commentStore.addComment(values).then(() => resetForm())}\r\n                        initialValues={{ body: '' }}\r\n                        validationSchema = {Yup.object({\r\n                            body: Yup.string().required()\r\n                        })}\r\n                    >\r\n                        {({ isSubmitting, isValid, handleSubmit }) => (\r\n                            <Form className='ui form'>\r\n                                <Field name='body'>\r\n                                    {(props: FieldProps) => (\r\n                                        <div style={{position: 'relative'}}>\r\n                                            <Loader active={isSubmitting} />\r\n                                            <textarea\r\n                                                placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\r\n                                                rows={2}\r\n                                                {...props.field}\r\n                                                onKeyPress={e => {\r\n                                                    if (e.key === 'Enter' && e.shiftKey) {\r\n                                                        return;\r\n                                                    }\r\n                                                    if (e.key === 'Enter' && !e.shiftKey) {\r\n                                                        e.preventDefault();\r\n                                                        isValid && handleSubmit();\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                            </textarea>\r\n                                        </div>\r\n                                    )}\r\n                                </Field>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>                                       \r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSideBar.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\errors\\TestErrors.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\errors\\NotFound.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\errors\\ValidationErrors.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\errors\\ServerError.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextInput.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextArea.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\MySelectInput.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\options\\CategoryOptions.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\MyDateInput.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\users\\LoginForm.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\users\\RegisterForm.tsx",["217","218"],"import { Formik, Form, ErrorMessage, yupToFormErrors } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../activities/errors/ValidationErrors';\r\n\r\n//make observer when calling a store (userStore in this case)\r\nexport default observer(function RegisterForm() {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{ displayName: '', username: '', email: '', password: '', error: null }}\r\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => \r\n                    setErrors({error}))}\r\n                validationSchema={Yup.object({\r\n                    displayName: Yup.string().required(),\r\n                    username: Yup.string().required(),\r\n                    email: Yup.string().required().email(),\r\n                    password: Yup.string().required(),\r\n                })}\r\n            >\r\n            {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n                <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center' />\r\n                    <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n                    <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n                    <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n                    <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                    <ErrorMessage\r\n                        name = 'error' render={() => \r\n                        <ValidationErrors errors={errors.error} />} \r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} \r\n                            loading={isSubmitting} positive content=\"Register\" type=\"submit\" fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendee.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\models\\profile.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileCard.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePage.tsx",["219"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage() {\r\n    const { username } = useParams<{username: string}>();\r\n    const { profileStore } = useStore();\r\n    const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }\r\n    }, [loadProfile, username])\r\n\r\n    if (loadingProfile) return <LoadingComponent content='Load profile...'/>\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                <>\r\n                    <ProfileHeader profile={profile}/>\r\n                    <ProfileContent profile={profile}/>\r\n                </>\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n});","E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileHeader.tsx",["220","221"],"import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Divider, Grid, Header, Item, Reveal, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({profile}: Props){\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'}/>\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName}></Header>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount}/>\r\n                        <Statistic label='Following' value={profile.followingCount}/>\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                   <FollowButton profile={profile} />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileContent.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\profileStore.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePhotos.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\imageUpload\\PhotoUploadWidget.tsx",["222","223"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\r\nimport { boolean } from \"yup\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props  {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content='Step 1 - Add photo'/>\r\n                <PhotoWidgetDropzone setFiles={setFiles} />\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content='Step 2 - Resize image'/>\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content='Step 3 - Preview & Upload'/>\r\n                {files && files.length > 0 &&\r\n                    <>\r\n                        <div className=\"img-preview\" style={{minHeight: 200, overflow: 'hidden'}} />\r\n                        <Button.Group widths={2}>\r\n                            <Button loading={loading} onClick={onCrop} positive icon='check' />\r\n                            <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\r\n                        </Button.Group>\r\n                    </>\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetDropzone.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetCropper.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\stores\\commentStore.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\FollowButton.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileFollowings.tsx",[],"E:\\Udemy\\Reactivities\\client-app\\src\\app\\models\\pagination.ts",[],"E:\\Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemPlaceholder.tsx",[],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":24},{"ruleId":"228","severity":1,"message":"232","line":5,"column":35,"nodeType":"230","messageId":"231","endLine":5,"endColumn":41},{"ruleId":"228","severity":1,"message":"233","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":18},{"ruleId":"228","severity":1,"message":"234","line":1,"column":38,"nodeType":"230","messageId":"231","endLine":1,"endColumn":53},{"ruleId":"228","severity":1,"message":"235","line":4,"column":26,"nodeType":"230","messageId":"231","endLine":4,"endColumn":31},{"ruleId":"236","severity":1,"message":"237","line":20,"column":8,"nodeType":"238","endLine":20,"endColumn":31,"suggestions":"239"},{"ruleId":"228","severity":1,"message":"232","line":3,"column":10,"nodeType":"230","messageId":"231","endLine":3,"endColumn":16},{"ruleId":"228","severity":1,"message":"240","line":3,"column":47,"nodeType":"230","messageId":"231","endLine":3,"endColumn":53},{"ruleId":"228","severity":1,"message":"241","line":2,"column":32,"nodeType":"230","messageId":"231","endLine":2,"endColumn":37},{"ruleId":"228","severity":1,"message":"242","line":3,"column":10,"nodeType":"230","messageId":"231","endLine":3,"endColumn":17},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"@typescript-eslint/no-unused-vars","'LoadingComponent' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'MyTextArea' is defined but never used.","'yupToFormErrors' is defined but never used.","'Label' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setActiveTab'. Either include it or remove the dependency array.","ArrayExpression",["245"],"'Reveal' is defined but never used.","'Image' is defined but never used.","'boolean' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},"Update the dependencies array to be: [loadProfile, setActiveTab, username]",{"range":"248","text":"249"},[755,778],"[loadProfile, setActiveTab, username]"]